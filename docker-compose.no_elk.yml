services:
  #! INIT SCRIPTS
  db-init:
    image: db-init
    container_name: db-init
    build: ./scripts/db-init
    networks:
      - transcendence_net
    volumes:
      - sqlite-data:/data

  frontend:
    image: frontend
    container_name: frontend
    build: ./frontend
    networks:
      - transcendence_net
    restart: on-failure

    #* frontend dev mode
    volumes:
      - ./frontend:/app
      - /app/node_modules
    expose:
      - 5173
    command: npm run dev
    environment:
      - VITE_GOOGLE_AUTH_CLIENT_ID=${VITE_GOOGLE_AUTH_CLIENT_ID}

  nginx:
    image: nginx
    container_name: nginx
    build:
      context: ./nginx
      args:
        ELK_USER: ${ELK_USER}
        ELK_PASSWORD: ${ELK_PASSWORD}
    networks:
      - transcendence_net
    ports:
      - "8443:443"
    environment:
      - DOMAIN=${DOMAIN}
    depends_on:
      frontend:
        condition: service_started
      auth:
        condition: service_started
      game:
        condition: service_started
    restart: on-failure

  auth:
    image: auth
    container_name: auth
    build: ./services/auth
    restart: on-failure
    networks:
      - transcendence_net
    volumes:
      - ./services/auth:/app
      - /app/node_modules
      - sqlite-data:/data
    depends_on:
      db-init:
        condition: service_completed_successfully

  game:
    image: game
    container_name: game
    build: ./services/game
    restart: on-failure
    networks:
      - transcendence_net
    volumes:
      - ./services/game:/app
      - /app/node_modules
      - sqlite-data:/data
    depends_on:
      db-init:
        condition: service_completed_successfully


networks:
  transcendence_net:
    driver: bridge

volumes:
  sqlite-data: