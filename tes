diff --git a/Makefile b/Makefile
index 3cf8743..a4b357f 100644
--- a/Makefile
+++ b/Makefile
@@ -6,7 +6,7 @@
 #    By: mbecker <mbecker@student.42.fr>            +#+  +:+       +#+         #
 #                                                 +#+#+#+#+#+   +#+            #
 #    Created: 2025/04/06 21:30:49 by mbecker           #+#    #+#              #
-#    Updated: 2025/04/17 12:40:38 by mbecker          ###   ########.fr        #
+#    Updated: 2025/04/29 15:52:04 by mbecker          ###   ########.fr        #
 #                                                                              #
 # **************************************************************************** #
 
diff --git a/docker-compose.yml b/docker-compose.yml
index 6d4d227..b85420a 100644
--- a/docker-compose.yml
+++ b/docker-compose.yml
@@ -1,19 +1,45 @@
+#! ANCHORUS
+x-logging:
+  &elk
+  driver: syslog
+  options:
+    syslog-address: "tcp://127.0.0.1:8044"
+    syslog-format: rfc5424
+    tag: "{{.Name}}"
+    env: json
+
 services:
+  #! INIT SCRIPTS
+  db-init:
+    image: db-init
+    container_name: db-init
+    build: ./scripts/db-init
+    networks:
+      - transcendence_net
+    volumes:
+      - sqlite-data:/data
+  elk-init:
+    image: curlimages/curl:7.88.1
+    container_name: elk-init
+    build: ./scripts/elk-init
+    networks:
+      - transcendence_net
+    depends_on:
+      - logstash
+
   frontend:
     image: frontend
+    container_name: frontend
     build: ./frontend
     networks:
       - transcendence_net
     depends_on:
-      - auth
-      - game
+      elk-init:
+        condition: service_completed_successfully
     restart: on-failure
-    logging:
-      driver: gelf
-      options:
-        gelf-address: "udp://logstash:12201"
-        tag: "auth"
-    #! frontend dev mode
+    #TODO: redirect logs to elk
+
+    #* frontend dev mode
     volumes:
       - ./frontend:/app
       - /app/node_modules
@@ -23,14 +49,15 @@ services:
 
   nginx:
     image: nginx
+    container_name: nginx
     build: ./nginx
     networks:
       - transcendence_net
     ports:
       - "8443:443"
     depends_on:
-      logstash:
-        condition: service_healthy
+      elk-init:
+        condition: service_completed_successfully
       frontend:
         condition: service_started
       auth:
@@ -38,22 +65,13 @@ services:
       game:
         condition: service_started
     restart: on-failure
-    logging:
-      driver: gelf
-      options:
-        gelf-address: "udp://logstash:12201"
-        tag: "auth"
+    logging: *elk
 
-  db-init:
-    image: db-init
-    build: ./scripts/db-init
-    networks:
-      - transcendence_net
-    volumes:
-      - sqlite-data:/data
   auth:
     image: auth
+    container_name: auth
     build: ./services/auth
+    restart: on-failure
     networks:
       - transcendence_net
     volumes:
@@ -61,19 +79,17 @@ services:
       - /app/node_modules
       - sqlite-data:/data
     depends_on:
-      logstash:
-        condition: service_healthy
+      elk-init:
+        condition: service_completed_successfully
       db-init:
-        condition: service_started
-    restart: on-failure
-    logging:
-      driver: gelf
-      options:
-        gelf-address: "udp://logstash:12201"
-        tag: "auth"
+        condition: service_completed_successfully
+    logging: *elk
+    
   game:
     image: game
+    container_name: game
     build: ./services/game
+    restart: on-failure
     networks:
       - transcendence_net
     volumes:
@@ -81,82 +97,53 @@ services:
       - /app/node_modules
       - sqlite-data:/data
     depends_on:
-      logstash:
-        condition: service_healthy
+      elk-init:
+        condition: service_completed_successfully
       db-init:
-        condition: service_started
-    restart: on-failure
-    logging:
-      driver: gelf
-      options:
-        gelf-address: "udp://logstash:12201"
-        tag: "auth"
-  log:
-    image: log
-    build: ./services/log
-    networks:
-      - transcendence_net
-    volumes:
-      - ./services/log:/app
-      - /app/node_modules
-    depends_on:
-      logstash:
-        condition: service_healthy
-      db-init:
-        condition: service_started
-    restart: on-failure
-    logging:
-      driver: gelf
-      options:
-        gelf-address: "udp://logstash:12201"
-        tag: "auth"
+        condition: service_completed_successfully
+    logging: *elk
+    
+
 
-  #! ELK stack
+  #! ELK STACK
   elasticsearch:
-    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
+    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
+    container_name: elasticsearch
     environment:
       - discovery.type=single-node
       - xpack.security.enabled=false
-    ports:
-      - "9200:9200"
-    volumes:
-      - elastic-data:/usr/share/elasticsearch/data
     networks:
       - transcendence_net
+    ports:
+      - 9200
     healthcheck:
-      test: ["CMD", "curl", "-f", "http://localhost:9200"]
-      interval: 10s
-      timeout: 5s
-      retries: 5
-
+      test: ["CMD-SHELL", "curl -f http://localhost:9200"]
+      interval: 5s
+      retries: 10
   logstash:
-    image: docker.elastic.co/logstash/logstash:8.12.0
+    image: docker.elastic.co/logstash/logstash:8.10.2
+    container_name: logstash
     volumes:
       - ./elk/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
-    depends_on:
-      elasticsearch:
-        condition: service_healthy
     networks:
       - transcendence_net
     ports:
-      - "9600:9600"
-      - "12201:12201/udp"
-    healthcheck:
-      test: ["CMD", "curl", "-f", "http://localhost:9600/_node/stats"]
-      interval: 10s
-      timeout: 5s
-      retries: 5
-
+      - "8044:5044"
+    depends_on:
+      elasticsearch:
+        condition: service_healthy
   kibana:
-    image: docker.elastic.co/kibana/kibana:8.12.0
-    ports:
-      - "5601:5601"
+    image: docker.elastic.co/kibana/kibana:8.10.2
+    container_name: kibana
     environment:
       - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
-    depends_on:
-      - elasticsearch
     networks:
       - transcendence_net
+    ports:
+      - "8601:5601"
+    depends_on:
+      elk-init:
+        condition: service_completed_successfully
 
 networks:
   transcendence_net:
diff --git a/elk.test/docker-compose.yml b/elk.test/docker-compose.yml
deleted file mode 100644
index d8b1777..0000000
--- a/elk.test/docker-compose.yml
+++ /dev/null
@@ -1,56 +0,0 @@
-services:
-  elasticsearch:
-    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
-    container_name: elasticsearch
-    environment:
-      - discovery.type=single-node
-      - xpack.security.enabled=false
-    ports:
-      - "8200:9200"
-      - "8300:9300"
-    healthcheck:
-      test: ["CMD-SHELL", "curl -f http://localhost:9200"]
-      interval: 5s
-      retries: 10
-
-  logstash:
-    container_name: logstash
-    image: docker.elastic.co/logstash/logstash:8.10.2
-    volumes:
-      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
-    ports:
-      - "8044:5044"
-    depends_on:
-      elasticsearch:
-        condition: service_healthy
-
-  setup:
-    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
-    container_name: setup
-    entrypoint: ["/bin/bash", "-c", "echo 'Waiting for Elasticsearch to be ready...' && sleep 30 && curl -X POST 'http://elasticsearch:9200/_cluster/health?wait_for_status=yellow&timeout=50s'"]
-    depends_on:
-      elasticsearch:
-        condition: service_healthy
-
-  kibana:
-    image: docker.elastic.co/kibana/kibana:8.10.2
-    container_name: kibana
-    environment:
-      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
-    ports:
-      - "8601:5601"
-    depends_on:
-      elasticsearch:
-        condition: service_healthy 
-
-  elk-writer:
-    build:
-      context: ./elk-writer
-    container_name: elk-writer
-    depends_on:
-      - logstash
-    logging:
-      driver: syslog
-      options:
-        syslog-address: "tcp://127.0.0.1:8044"
-        tag: "elk-writer-logs"
\ No newline at end of file
diff --git a/elk.test/elk-init.sh b/elk.test/elk-init.sh
deleted file mode 100644
index da74fa8..0000000
--- a/elk.test/elk-init.sh
+++ /dev/null
@@ -1 +0,0 @@
-echo '{"message": "test log 2"}' | nc localhost 8044ww
\ No newline at end of file
diff --git a/elk.test/elk-writer/Dockerfile b/elk.test/elk-writer/Dockerfile
deleted file mode 100644
index 85cff8a..0000000
--- a/elk.test/elk-writer/Dockerfile
+++ /dev/null
@@ -1,7 +0,0 @@
-FROM gcc:latest
-
-WORKDIR /app
-COPY writer.c .
-
-RUN cc -o writer writer.c
-CMD ["./writer"]
diff --git a/elk.test/elk-writer/writer.c b/elk.test/elk-writer/writer.c
deleted file mode 100644
index 5b11543..0000000
--- a/elk.test/elk-writer/writer.c
+++ /dev/null
@@ -1,16 +0,0 @@
-#include <stdio.h>
-#include <unistd.h>
-
-int main()
-{
-	setbuf(stdout, NULL); // Disable buffering
-	printf("Hello, World!\n");
-	sleep(1);
-
-	for (int i = 0; i < 2147483647; i++)
-	{
-		printf("i = %d\n", i);
-		sleep(1);
-	}
-	return 0;
-}
diff --git a/elk.test/logstash.conf b/elk.test/logstash.conf
deleted file mode 100644
index 0e6ddfa..0000000
--- a/elk.test/logstash.conf
+++ /dev/null
@@ -1,18 +0,0 @@
-input {
-  tcp {
-    port => 5044
-    codec => json
-  }
-}
-
-filter {
-  # Add any filtering logic here if needed
-}
-
-output {
-  elasticsearch {
-    hosts => ["http://elasticsearch:9200"]
-    index => "docker-logs-%{+YYYY.MM.dd}"
-  }
-  stdout { codec => rubydebug }
-}
diff --git a/elk/logstash.conf b/elk/logstash.conf
index e9a2305..2bb6b51 100644
--- a/elk/logstash.conf
+++ b/elk/logstash.conf
@@ -1,11 +1,30 @@
 input {
-  gelf {
-    port => 12201
-  }
+	tcp {
+		port => 5044
+		codec => plain { charset => "UTF-8" }
+	}
 }
+
+filter {
+	grok {
+		match => {
+			"message" => "<%{NUMBER:priority}>%{NUMBER:version} %{TIMESTAMP_ISO8601:timestamp} %{HOSTNAME:hostname} %{WORD:appname} %{NUMBER:procid} %{WORD:msgid} - %{GREEDYDATA:log_message}"
+		}
+	}
+
+	date {
+		match => ["timestamp", "ISO8601"]
+	}
+
+	mutate {
+		remove_field => ["message"]
+	}
+}
+
 output {
-  elasticsearch {
-    hosts => ["http://elasticsearch:9200"]
-    index => "docker-logs-%{+YYYY.MM.dd}"
-  }
-}
\ No newline at end of file
+	elasticsearch {
+		hosts => ["http://elasticsearch:9200"]
+		index => "docker-logs-%{+YYYY.MM.dd}"
+	}
+	stdout { codec => rubydebug }
+}
diff --git a/nginx/conf.d/default.conf b/nginx/conf.d/default.conf
index 6429504..b434dd8 100644
--- a/nginx/conf.d/default.conf
+++ b/nginx/conf.d/default.conf
@@ -1,12 +1,8 @@
-#server {
-#	listen 80;
-#	server_name localhost;
-
-#	# Redirect HTTP to HTTPS
-#    if ($host ~* ^(.+)$) {
-#        return 301 https://$host$request_uri;
-#    }
-#}
+server {
+	listen 80;
+	server_name localhost;
+	return 301 https://$host$request_uri;
+}
 
 server {
 	listen 443 ssl;
@@ -43,9 +39,17 @@ server {
 		rewrite ^/api/game/(.*) /$1 break; # Remove /api/game prefix
 	}
 
-	# Reverse proxy for log service
-	location /api/log {
-		proxy_pass http://log:3002/;
-		rewrite ^/api/log/(.*) /$1 break; # Remove /api/log prefix
+	## Reverse proxy for log service
+	#location /api/log {
+	#	proxy_pass http://log:3002/;
+	#	rewrite ^/api/log/(.*) /$1 break; # Remove /api/log prefix
+	#}
+
+	location /kibana {
+		proxy_pass http://kibana:5601/;
+        proxy_set_header Host $host;
+        proxy_set_header X-Real-IP $remote_addr;
+        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
+        proxy_set_header X-Forwarded-Proto $scheme;
 	}
 }
